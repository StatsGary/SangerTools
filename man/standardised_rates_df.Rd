% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/standardised_rates_df.R
\name{standardised_rates_df}
\alias{standardised_rates_df}
\title{Standardised Prevalence Rates in Tibble format.}
\usage{
standardised_rates_df(
  df,
  Split_by,
  Condition,
  Population_Standard,
  Granular = FALSE,
  ...
)
}
\arguments{
\item{df}{a tidy dataframe in standard Master Patient Index format ie SangerTools::PopHealthData.}

\item{Split_by}{A column name within df for which the standardised rates will be calculated for.}

\item{Condition}{A Health condition flag denoted by 1 & 0; where 1 denotes the patient being positive for the health condition.}

\item{Population_Standard}{Population Standard Weight used for Standardising; default set to NULL; which denotes  use of Age Structure of df.}

\item{Granular}{Takes a boolean value. If set to TRUE will output a tibble with Standardised Rates using values provided in `Split_col` and `...`By default is set to FALSE.}

\item{...}{Variables used to standardise by; Must always have Age band for age standardisation, additional variables are optional and should be passed separated by commas.}
}
\value{
A tibble containing standardised Prevalence Rates by specified group.
}
\description{
This calculation is performed
for all unique values in the column passed to `split_by`. This is a more generalised function
and will pair well with `excel_clip()` and `df_to_sql()`.
}
\examples{
library(SangerTools)
df_rates <- standardised_rates_df(
  df = PopHealthData,
  Split_by = Locality,
  Condition = Diabetes,
  Population_Standard = NULL,
  Granular = TRUE,
  AgeBand
)
print(df_rates)
}
